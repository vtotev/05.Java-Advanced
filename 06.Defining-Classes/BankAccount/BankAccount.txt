Bank Account
-------------------------
Create class BankAccount.
The class should have private fields for:
•	Id: int (Starts from 1 and increments for every new account)
•	Balance: double
•	Interest rate: double (Shared for all accounts. Default value: 0.02)
The class should also have public methods for:
•	setInterestRate(double interest): void (static)
•	getInterest(int Years): double
•	deposit(double amount): void
Create a test client supporting the following commands:
•	Create
•	Deposit {Id} {Amount}
•	SetInterest {Interest}
•	GetInterest {ID} {Years}
•	End

Examples

Input
-------------------------
Create
Deposit 1 20
GetInterest 1 10
End

Output
-------------------------
Account ID1 created
Deposited 20 to ID1
4.00	


Input
-------------------------
Create
Create
Deposit 1 20
Deposit 3 20
Deposit 2 10
SetInterest 1.5
GetInterest 1 1
GetInterest 2 1
GetInterest 3 1
End

Output
-------------------------
Account ID1 created
Account ID2 created
Deposited 20 to ID1
Account does not exist
Deposited 10 to ID2
30.00
15.00
Account does not exist

Comments
-------------------------
Sets the global interest rate to 1.
Prints interest for bank account with id 1 for 1 year period.


Solution
-------------------------
Create the class as usual and create a constant for the default interest rate
 
Create the static and non-static fields, all private
 
Set the id of an account upon creation while incrementing the global account count
 
Create a setter for the global interest rate. Making the method static will let you access it through the class name
 
Implement deposit() and getInterest()
  


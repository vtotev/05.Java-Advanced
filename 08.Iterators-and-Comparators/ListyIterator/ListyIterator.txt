ListyIterator
------------------------
Create a class "ListyIterator", it should receive the collection of Strings which it will iterate, through its constructor. You should store the elements in a List. The class should have three main functions:
•	Move - should move an internal index position to the next index in the list, the method should return true if it successfully moved and false if there is no next index.
•	HasNext - should return true if there is a next index and false if the index is already at the last element of the list.
•	Print - should print the element at the current internal index, calling Print on a collection without elements should throw an appropriate exception with the message "Invalid Operation!". 
By default, the internal index should be pointing to the 0th index of the List. Your program should support the following commands:

Command			Return Type	Description
-------------------------------------------------------------------------
Create {e1 e2 …}	void		Creates a ListyIterator from the specified collection. In case of a Create command without any elements, you should create a ListyIterator with an empty collection.
Move			boolean		This command should move the internal index to the next index.
Print			void		This command should print the element at the current internal index.
HasNext			boolean		Returns whether the collection has a next element.
END			void		Stops the input.


Input
------------------------
Input will come from the console as lines of commands. The first line will always be Create command in the input. The last command received will always be END command.

Output
------------------------
For every command from the input (with the exception of the END and Create commands) print the result of that command on the console, each on a new line. In case of Move or HasNext commands print the returned value of the method, in case of a Print command you don’t have to do anything additional as the method itself should already print on the console. Your program should catch any exceptions thrown because of validations (calling Print on an empty collection) and print their messages instead.

Constraints
------------------------
•	There will always be only one Create command and it will always be the first command passed.
•	The number of commands received will be between [1…100].
•	The last command will always be the END command.


Examples
Input		Output
------------------------
Create		Invalid Operation!
Print
END


Create Stefcho Goshky	true
HasNext			Stefcho
Print			true
Move			Goshky
Print
END


Create 1 2 3		true
HasNext			true
Move			true
HasNext			true
HasNext			true
Move			false
HasNext
END